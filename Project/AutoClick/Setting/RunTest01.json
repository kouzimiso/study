{
    "Begin": [
        {
            "comment": "起動開始のPlanはBeginを基本とする。Alphabet順で早いため、自動Sortに有利だから。GameStart等の動作開始のStartとの区別の意味もある",
            "name": "StartTest",
            "settings": {
                "check_result": {
                    "result": true,
                    "test": 2
                },
                "check_result_ng_stop": true,
                "file_path": "../Setting/RunTest01.json",
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "plan_lists": [
                    "test0",
                    "test1",
                    "test2"
                ]
            },
            "type": "RunPlanLists"
        },
        {
            "name": "print_end_test",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "End test"
            },
            "type": "Print"
        }
    ],
    "Call_CloseWindowByName": [
        {
            "name": "CloseWindowByName",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "file_path": "../Setting/TemplateRunApply.json",
                "loop_condition": false,
                "loop_limit_count": 1,
                "plan_lists": [
                    "CloseWindowByName"
                ],
                "terminate_condition": false
            },
            "type": "RunPlanLists"
        }
    ],
    "Call_TimeCheck": [
        {
            "comment": "",
            "condition_list": "",
            "name": "Condition_TimeEvent",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "file_path": "../Setting/RunHouchiChild.json",
                "log_file_path_list": "../Log/log_houchi.json",
                "log_function": true,
                "log_print_standard_output": true,
                "plan_lists": [
                    "TimeCheck_TimeEvent01"
                ]
            },
            "type": "RunPlanLists"
        }
    ],
    "CloseWindowByName": [
        {
            "name": "ExecuteProgram_test",
            "settings": {
                "action": "DELETE",
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "flag_exact_match": false,
                "program_path": "./Common/Window.py",
                "target_text": "Z"
            },
            "type": "ExecuteProgram"
        }
    ],
    "Print Test": [
        {
            "name": "print_test",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "Print Test"
            },
            "type": "Print"
        }
    ],
    "test0": [
        {
            "name": "plan_list_loop",
            "settings": {
                "check_result": {
                    "message": "printを繰り返し2回する動作のTest",
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "printを繰り返し2回する動作のTest"
            },
            "type": "Print"
        },
        {
            "condition_list": "",
            "name": "Run_plan_list_loop",
            "result_name": "Result_Test0",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "file_path": "../Setting/RunTest01.json",
                    "loop_count": 2,
                    "loop_limit_count": 2,
                    "message": "test_printjudgeLoop2/2",
                    "plan_list_name": "test_print"
                },
                "check_result_ng_stop": true,
                "terminate_and_delete_condition": [
                    "Flag_Terminate"
                ],
                "file_path": "../Setting/RunTest01.json",
                "log_file_path_list": [
                    "../Log/log_all.json",
                    "../Log/log_test.json"
                ],
                "log_function": true,
                "log_print_standard_output": false,
                "loop_condition": true,
                "loop_limit_count": 2,
                "plan_lists": [
                    "test_print"
                ],
                "terminate_condition": [
                    "Flag_Terminate.detail = OK,Flag_Terminate.detail = ALL_OK"
                ]
            },
            "type": "RunPlanLists"
        },
        {
            "name": "plan_list_loop",
            "settings": {
                "check_result": {
                    "message": "printの繰り返し2回を4回に設定変更する動作のTest",
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "printの繰り返し2回を4回に設定変更する動作のTest"
            },
            "type": "Print"
        },
        {
            "name": "ChangeSettings",
            "settings": {
                "#step_check_mode": true,
                "change_settings": {
                    "#log_file_path_list": [
                        "../Log/log_all.json",
                        "../Log/log_test.json"
                    ],
                    "#log_print_standard_output": false,
                    "log_function": true
                },
                "change_settings_by_name": {
                    "judge_loop": {
                        "loop_limit_count": 4
                    }
                },
                "check_result": {
                    "change_settings_by_name": {
                        "judge_loop": {
                            "loop_limit_count": 4
                        }
                    },
                    "result": true,
                    "settings": {
                        "#log_file_path_list": [
                            "../Log/log_all.json",
                            "../Log/log_test.json"
                        ],
                        "#log_print_standard_output": false,
                        "log_function": true
                    }
                },
                "check_result_ng_stop": true,
                "reset_settings": true
            },
            "type": "ChangeSettings"
        },
        {
            "comment": "",
            "name": "judge_loop",
            "settings": {
                "#step_check_mode": true,
                "check_result": {},
                "check_result_ng_stop": true,
                "condition_list": true,
                "terminate_and_delete_condition": [
                    "Flag_Terminate"
                ],
                "log_file_path_list": [
                    "../Log/log_all.json",
                    "../Log/log_test.json"
                ],
                "log_function": true,
                "log_print_standard_output": false,
                "loop_condition": true,
                "loop_limit_count": 2,
                "retry_number": 1,
                "terminate_condition": [
                    "Flag_Terminate = true"
                ]
            },
            "type": "Judge"
        },
        {
            "comment": "",
            "name": "judge_non_loop",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "condition_list": [],
                    "detail": "Judge result false.(Flag_Terminate = true:False(Flag_Terminate(It is not in the dictionary) = true(True)))",
                    "level": "INFO",
                    "result": true
                },
                "check_result_ng_stop": true,
                "terminate_and_delete_condition": [
                    "Flag_Terminate"
                ],
                "log_file_path_list": [
                    "../Log/log_all.json",
                    "../Log/log_test.json"
                ],
                "log_function": true,
                "log_print_standard_output": false,
                "retry_number": 1,
                "terminate_condition": [
                    "Flag_Terminate = true"
                ]
            },
            "type": "Judge"
        },
        {
            "condition_list": "",
            "name": "Copy_plan_list",
            "result_name": "",
            "settings": {
                "check_result": {
                    "file_path": "../Setting/RunTest01.json",
                    "plan_lists": {
                        "Print_PlanListCopy01": [
                            {
                                "name": "Print_PlanCopy01",
                                "result_name": "result_print",
                                "settings": {
                                    "check_result": {
                                        "message": "test child 2 loop print",
                                        "result": true
                                    },
                                    "check_result_ng_stop": true,
                                    "log_file_path_list": "../Log/log_all.json",
                                    "log_function": true,
                                    "log_print_standard_output": false,
                                    "message": "test child 2 loop print"
                                },
                                "type": "Print"
                            }
                        ],
                        "Print_PlanListCopy02": [
                            {
                                "name": "Print_PlanCopy02",
                                "result_name": "result_print",
                                "settings": {
                                    "check_result": {
                                        "message": "test child 2 loop print",
                                        "result": true
                                    },
                                    "check_result_ng_stop": true,
                                    "log_file_path_list": "../Log/log_all.json",
                                    "log_function": true,
                                    "log_print_standard_output": false,
                                    "message": "It changed settings from test_print to Print_PlanCopy02,and it is changed setting."
                                },
                                "type": "Print"
                            }
                        ],
                        "plan_file_path": "../Setting/RunTest01.json"
                    }
                },
                "check_result_ng_stop": true,
                "copy_plan_lists": [
                    {
                        "change_plan_names": {
                            "Print": "Print_PlanCopy01"
                        },
                        "copy_plan_list_name": "Print_PlanListCopy01",
                        "source_plan_list_name": "test_print"
                    },
                    {
                        "change_plan_names": {
                            "Print": "Print_PlanCopy02"
                        },
                        "change_settings_by_name": {
                            "Print_PlanCopy02": {
                                "message": "It changed settings from test_print to Print_PlanCopy02,and it is changed setting."
                            }
                        },
                        "copy_plan_list_name": "Print_PlanListCopy02",
                        "source_plan_list_name": "test_print"
                    }
                ],
                "file_path": "../Setting/RunTest01.json",
                "log_file_path_list": [
                    "../Log/log_all.json",
                    "../Log/log_test.json"
                ],
                "log_function": true,
                "log_print_standard_output": false
            },
            "type": "CopyPlanLists"
        },
        {
            "condition_list": "",
            "name": "SettingChange",
            "result_name": "",
            "settings": {
                "change_settings_by_name": {
                    "Print_PlanCopy01": {
                        "message": "It changed settings from test_print to Print_PlanCopy01 ,before it is changed setting by ChangeSettingsByName"
                    }
                },
                "check_result": {
                    "change_settings_by_name": {
                        "Print_PlanCopy01": {
                            "message": "It changed settings from test_print to Print_PlanCopy01 ,before it is changed setting by ChangeSettingsByName"
                        }
                    },
                    "result": true,
                    "settings": {
                        "#log_file_path_list": [
                            "../Log/log_all.json",
                            "../Log/log_test.json"
                        ],
                        "#log_print_standard_output": false,
                        "log_function": true
                    }
                },
                "check_result_ng_stop": true,
                "log_file_path_list": [
                    "../Log/log_all.json",
                    "../Log/log_test.json"
                ],
                "log_function": true,
                "log_print_standard_output": false
            },
            "type": "ChangeSettings"
        },
        {
            "comment": "",
            "condition_list": "",
            "name": "Condition_TimeEvent",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "file_path": "",
                "log_file_path_list": "../Log/log_houchi.json",
                "log_function": true,
                "log_print_standard_output": true,
                "plan_lists": [
                    "Call_TimeCheck",
                    "Call_CloseWindowByName",
                    "Print_PlanListCopy01",
                    "test_print_result_check",
                    "Print_PlanListCopy02",
                    "test_print_result_check"
                ]
            },
            "type": "RunPlanLists"
        },
        {
            "name": "print_end_test",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "End loop test"
            },
            "type": "Print"
        },
        {
            "name": "print_end_test",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "End loop test"
            },
            "type": "Print"
        },
        {
            "name": "CopyInformationData",
            "result_name": "result_copy_information",
            "settings": {
                "check_result": {
                    "result": true,"test":""
                },
                "check_result_ng_stop": true,
                "data_name": "Result_datas",
                "data_structure": {
                    "Account01": {
                        "print_data": "",
                        "result_recognition": ""
                    },
                    "Account02": {
                        "print_data": "",
                        "result_recognition": ""
                    }         
                },
                "restructure_settings": {
                    "print_data": "result_print"
                }
            },
            "type": "CopyInformation"
        }
    ],
    "test1": [
        {
            "comment": [
                "日時の確認の関数",
                "Day1,Day3には特定の日付か曜日を含む時間を入れられる。",
                "Day2には曜日は入れられない"
            ],
            "name": "DayCondition1",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "day1": "月曜日10:20",
                "day2": "Now",
                "day3": "水曜日22:30",
                "log_file_path_list": "../Log/log_all.log",
                "log_print_standard_output": false
            },
            "type": "CheckDay"
        },
        {
            "comment": "比較する時刻に矛盾が無いことを確認する関数。Day1,Day2には特定の日付か曜日を含む時間を入れられる。day2には曜日は入れられない。day1かday3片方が曜日の場合は一週間回って必ず成立するのでTrue。",
            "name": "DayCondition2",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "day1": "水曜日22:30",
                "day2": "Now",
                "day3": "月曜日10:20",
                "log_file_path_list": "../Log/log_all.log",
                "log_print_standard_output": false
            },
            "type": "CheckDay"
        },
        {
            "name": "DayCondition3",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "day1": "木曜10:20",
                "day2": "2023/3/9 10:30:10",
                "day3": "Friday 22:30",
                "log_file_path_list": "../Log/log_all.log",
                "log_print_standard_output": false
            },
            "type": "CheckDay"
        },
        {
            "name": "DayCondition4",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "day1": "10:20",
                "day2": "2023/3/9 10:30:10",
                "day3": "10:40:23",
                "log_file_path_list": "../Log/log_all.log",
                "log_print_standard_output": false
            },
            "type": "CheckDay"
        },
        {
            "condition_list": "Result_DayCondition1=True",
            "name": "Print",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "Result_DayCondition1=True"
            },
            "type": "Print"
        },
        {
            "condition_list": "Result_DayCondition2=True",
            "name": "Print",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "Result_DayCondition2=True"
            },
            "type": "Print"
        },
        {
            "condition_list": "Result_DayCondition3=True",
            "name": "Print",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "Result_DayCondition3=True"
            },
            "type": "Print"
        },
        {
            "condition_list": "Result_DayCondition4=True",
            "name": "Print",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "Result_DayCondition4=True"
            },
            "type": "Print"
        },
        {
            "name": "Condition_Execute",
            "result_name": "Condition_Execute",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "condition_list": [
                    "Result_DayCondition1=True,Result_DayCondition2=True,Result_DayCondition3=True",
                    "Result_DayCondition3=True"
                ],
                "log_file_path_list": "../Log/log_all.log",
                "log_print_standard_output": false
            },
            "type": "Judge"
        },
        {
            "comment": "比較する時刻に矛盾が無いことを確認する関数。Day1,Day2には特定の日付か曜日を含む時間を入れられる。day2には曜日は入れられない。day1かday3片方が曜日の場合は一週間回って必ず成立するのでTrue。",
            "name": "TimeCheck_test1",
            "result_name": "test_Time_Check1",
            "settings": {
                "#step_check_mode": true,
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "day1": "土曜日0:00",
                "day2": "Now",
                "day3": "日曜日24:00",
                "log_file_path_list": "../Log/log_test.json",
                "log_print_standard_output": false
            },
            "type": "CheckDay"
        },
        {
            "condition_list": [
                "Condition_Execute=True"
            ],
            "name": "test1-1",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "message": "TimeCheck_test1"
            },
            "type": "Print"
        },
        {
            "comment": "（未作成）CheckDayをconditionに入れて比較するイメージ。符号が<=で良いかどうか微妙。",
            "condition_list": [
                "水曜日10:20<=Now<=月曜日22:30,木曜日10:20<=Now<=金曜日22:30",
                "Result_test1=True"
            ],
            "name": "test1-2",
            "settings": {
                "#step_check_mode": true,
                "action": "CLICK",
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "end_action": "CONTINUE",
                "end_condition": "OK",
                "execute_number": 1,
                "image_path": "../Images/test/*.png",
                "interval_time": 1,
                "judge_default_result": true,
                "log_arguments": false,
                "log_file_path_list": [
                    "../Log/log_all.log",
                    "../Log/log_test1-1.log"
                ],
                "log_function": true,
                "log_print_standard_output": false,
                "recognition_confidence": 0.1,
                "recognition_gray_scale": true,
                "retry_number": 1
            },
            "type": "Recognition"
        }
    ],
    "test2": [
        {
            "comment": "Imageを作って表示し、Imageを認識させるTest",
            "name": "test2",
            "result_name": "Result_test2",
            "settings": {
                "action": "GENERATE_TEXT_IMAGE",
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "file_path": "../Test/test_image.png",
                "font_size": 24,
                "height": 200,
                "show_image": true,
                "text": "test",
                "width": 400
            },
            "type": "Image"
        },
        {
            "condition_list": [
                "Result_test2.result=True"
            ],
            "name": "test2",
            "settings": {
                "#step_check_mode": true,
                "action": "-----",
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "end_action": "CONTINUE",
                "end_condition": "OK",
                "execute_number": 1,
                "image_path": "../Test/test_image.png",
                "input_key": "test",
                "interval_time": 1,
                "judge_default_result": true,
                "log_arguments": false,
                "log_file_path_list": [
                    "../Log/log_all.log",
                    "../Log/log_test2.log"
                ],
                "log_function": true,
                "log_print_standard_output": false,
                "recognition_confidence": 0.9,
                "recognition_gray_scale": true,
                "retry_number": 10,
                "scroll_distance_horizontal": 200,
                "scroll_distance_vertical": 200
            },
            "type": "Recognition"
        },
        {
            "comment": "ExecuteProgramの動作確認",
            "name": "ExecuteProgram_test",
            "settings": {
                "action": "GENERATE_RANDOM_IMAGE",
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "file_path": "../Test/test_random_image.png",
                "font_size": 24,
                "height": 200,
                "program_path": "./Common/ImageControl.py",
                "show_image": true,
                "text": "test",
                "width": 400
            },
            "type": "ExecuteProgram"
        },
        {
            "comment": "ExecuteProgramの動作確認",
            "name": "ExecuteProgram_test",
            "settings": {
                "action": "DELETE",
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "flag_exact_match": false,
                "program_path": "./Common/Window.py",
                "target_text": "ペイント"
            },
            "type": "ExecuteProgram"
        }
    ],
    "test_print": [
        {
            "name": "Print",
            "result_name": "result_print",
            "settings": {
                "check_result": {
                    "message": "test child 2 loop print",
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "test child 2 loop print"
            },
            "type": "Print"
        }
    ],
    "test_print_result_check": [
        {
            "condition_list": "result_print.result = True",
            "name": "Print_Result_True_Check",
            "result_name": "",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "result_print is true"
            },
            "type": "Print"
        },
        {
            "condition_list": "result_print.result = False",
            "name": "Print_Result_False_Check",
            "result_name": "",
            "settings": {
                "check_result": {
                    "result": true
                },
                "check_result_ng_stop": true,
                "log_file_path_list": "../Log/log_all.json",
                "log_function": true,
                "log_print_standard_output": false,
                "message": "result_print is false"
            },
            "type": "Print"
        }
    ]
}